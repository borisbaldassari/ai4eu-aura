pipeline {  

  agent any

  stages {

    stage('Checkout') { // Checkout (git clone ...) the projects repository
      steps {
        checkout scm
      }
    }
    stage('Setup') { // Install any dependencies you need to perform testing
      steps {
        script {
          sh """
          cd aibricks/

          # Delete previously built virtualenv
          if [ -d pyenv ]; then
              rm -rf pyenv/
          fi

          # Create virtualenv and install necessary packages
          python3 -m venv pyenv
          . pyenv/bin/activate
          #export PATH=pyenv/bin:${PATH}
          pip install --upgrade pip
          pip install --quiet nosexcover
          pip install --quiet pylint
          #nosetests --with-xcoverage --with-xunit --cover-package=aibricks --cover-erase
          #pylint -f parseable aibricks/ | tee pylint.out
          pip install -r requirements.txt
          """
        }
      }
    }
    stage('Linting') { // Run pylint against your code
      steps {
        script {
          sh """
          pylint **/*.py
          """
        }
      }
    }
    stage('Unit Testing') { // Perform unit testing
      steps {
        script {
          sh """
          pytest aibricks/ -s tests/unit
          """
        }
      }
    }
  }
}
